{
  "runtime": "NetCore20",
  "swaggerGenerator": {
    "fromSwagger": {
      "json": "{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"version\": \"v1.0\",\r\n    \"title\": \"Checkout.com Cart API\",\r\n    \"description\": \"Checkout.com cart prototype REST Api. Use version \\\"1.0\\\" OR \\\"1\\\" where asked\",\r\n    \"contact\": {\r\n      \"name\": \"Paul Backhouse\",\r\n      \"email\": \"paul.k.backhouse@gmail.com\"\r\n    }\r\n  },\r\n  \"paths\": {\r\n    \"/api/v{version}/Cart/{cartId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Cart\"\r\n        ],\r\n        \"summary\": \"Gets a cart for a given Cart Id reference.\",\r\n        \"operationId\": \"CartByCartIdGet\",\r\n        \"consumes\": [],\r\n        \"produces\": [\r\n          \"application/json;v=1.0\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"cartId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"string. Unique identifier of a cart\",\r\n            \"required\": true,\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          {\r\n            \"name\": \"version\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/CartDto\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Cart\"\r\n        ],\r\n        \"summary\": \"Removes and instance of a cart object and associated items\",\r\n        \"operationId\": \"CartByCartIdDelete\",\r\n        \"consumes\": [],\r\n        \"produces\": [],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"cartId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Id reference to delete all items and cart\",\r\n            \"required\": true,\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          {\r\n            \"name\": \"version\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v{version}/Cart\": {\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"Cart\"\r\n        ],\r\n        \"summary\": \"Adds an item to a cart. A new cart is created if cartId is not specified on the item\",\r\n        \"operationId\": \"CartPut\",\r\n        \"consumes\": [],\r\n        \"produces\": [\r\n          \"application/json;v=1.0\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"CartId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Unique Id of an existing cart to update. When empty creates new cart\",\r\n            \"required\": false,\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          {\r\n            \"name\": \"CountryId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Country the cart relates to\",\r\n            \"required\": false,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          {\r\n            \"name\": \"ProductId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Product to add/update\",\r\n            \"required\": false,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          {\r\n            \"name\": \"Qty\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          {\r\n            \"name\": \"version\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/CartProductDto\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v{version}/Cart/{cartId}/{productId}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Cart\"\r\n        ],\r\n        \"summary\": \"Removes a cart item for a given cartId and productId\",\r\n        \"operationId\": \"CartByCartIdByProductIdDelete\",\r\n        \"consumes\": [],\r\n        \"produces\": [],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"cartId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"CartId reference to delete a product against\",\r\n            \"required\": true,\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          {\r\n            \"name\": \"productId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"ProductId reference to delete from a given cartId reference\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          {\r\n            \"name\": \"version\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v{version}/Countries\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Countries\"\r\n        ],\r\n        \"summary\": \"Gets a collection of countries available for order process\",\r\n        \"operationId\": \"CountriesGet\",\r\n        \"consumes\": [],\r\n        \"produces\": [\r\n          \"application/json;v=1.0\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"version\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/CountryDto\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v{version}/Countries/{countryId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Countries\"\r\n        ],\r\n        \"summary\": \"Gets a country by a given countryId\",\r\n        \"operationId\": \"CountriesByCountryIdGet\",\r\n        \"consumes\": [],\r\n        \"produces\": [\r\n          \"application/json;v=1.0\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"countryId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"A given country Id to search for\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          {\r\n            \"name\": \"version\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/CountryDto\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v{version}/Products/{countryId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Products\"\r\n        ],\r\n        \"summary\": \"Gets a collection of products available for a given countryId\",\r\n        \"operationId\": \"ProductsByCountryIdGet\",\r\n        \"consumes\": [],\r\n        \"produces\": [\r\n          \"application/json;v=1.0\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"countryId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"A countryId to request products for\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          {\r\n            \"name\": \"pageIndex\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Zero based index querystring parameter requesting page. Default 0 (first page)\",\r\n            \"required\": false,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          {\r\n            \"name\": \"pageSize\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page size querystring parameter required. Default 15\",\r\n            \"required\": false,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          {\r\n            \"name\": \"version\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/PagedResultDto[ProductDto]\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v{version}/Products/{productId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Products\"\r\n        ],\r\n        \"summary\": \"Gets a product by a given productId\",\r\n        \"operationId\": \"ProductsByProductIdGet\",\r\n        \"consumes\": [],\r\n        \"produces\": [\r\n          \"application/json;v=1.0\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"productId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Id to query for\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          {\r\n            \"name\": \"version\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/ProductDto\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"definitions\": {\r\n    \"CartDto\": {\r\n      \"description\": \"an object describing a logic cart and items currently associated\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"cartId\": {\r\n          \"format\": \"uuid\",\r\n          \"description\": \"An Id of an exiting cart\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"countryId\": {\r\n          \"format\": \"int32\",\r\n          \"description\": \"The country Id this cart relates to\",\r\n          \"type\": \"integer\"\r\n        },\r\n        \"countryIsoCode\": {\r\n          \"description\": \"The country ISO code the cart is valid for\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"items\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"$ref\": \"#/definitions/CartProductDto\"\r\n          }\r\n        },\r\n        \"totalNetPrice\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalNetPriceFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalTax\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalTaxFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalGrossPrice\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalGrossPriceFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        }\r\n      }\r\n    },\r\n    \"CartProductDto\": {\r\n      \"description\": \"an oject describing a logical product as part of a cart\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"productName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"productCode\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"countryIsoCode\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"netPrice\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\"\r\n        },\r\n        \"totalNetPrice\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalNetPriceFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"taxAmount\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\"\r\n        },\r\n        \"taxAmountFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalTax\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalTaxFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalGrossPrice\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\",\r\n          \"readOnly\": true\r\n        },\r\n        \"totalGrossPriceFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"cartId\": {\r\n          \"format\": \"uuid\",\r\n          \"description\": \"Unique Id of an existing cart to update. When empty creates new cart\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"countryId\": {\r\n          \"format\": \"int32\",\r\n          \"description\": \"Country the cart relates to\",\r\n          \"maximum\": 32767,\r\n          \"minimum\": 1,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"productId\": {\r\n          \"format\": \"int32\",\r\n          \"description\": \"Product to add/update\",\r\n          \"maximum\": 2147483647,\r\n          \"minimum\": 1,\r\n          \"type\": \"integer\"\r\n        },\r\n        \"qty\": {\r\n          \"format\": \"int32\",\r\n          \"maximum\": 2147483647,\r\n          \"minimum\": 1,\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"CountryDto\": {\r\n      \"required\": [\r\n        \"name\",\r\n        \"isoCode\"\r\n      ],\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"name\": {\r\n          \"maxLength\": 35,\r\n          \"minLength\": 0,\r\n          \"type\": \"string\"\r\n        },\r\n        \"isoCode\": {\r\n          \"maxLength\": 7,\r\n          \"minLength\": 0,\r\n          \"type\": \"string\"\r\n        },\r\n        \"currencySymbol\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"currency\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"tax\": {\r\n          \"format\": \"double\",\r\n          \"maximum\": 100,\r\n          \"minimum\": 0,\r\n          \"type\": \"number\"\r\n        },\r\n        \"taxFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"isDefault\": {\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"isActive\": {\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"id\": {\r\n          \"format\": \"int32\",\r\n          \"type\": \"integer\"\r\n        }\r\n      }\r\n    },\r\n    \"PagedResultDto[ProductDto]\": {\r\n      \"description\": \"an object containing paged result data\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"items\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"$ref\": \"#/definitions/ProductDto\"\r\n          }\r\n        },\r\n        \"pager\": {\r\n          \"$ref\": \"#/definitions/PagerDto\"\r\n        }\r\n      }\r\n    },\r\n    \"ProductDto\": {\r\n      \"required\": [\r\n        \"code\",\r\n        \"shortDescription\",\r\n        \"country\"\r\n      ],\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"code\": {\r\n          \"maxLength\": 10,\r\n          \"minLength\": 0,\r\n          \"type\": \"string\"\r\n        },\r\n        \"shortDescription\": {\r\n          \"maxLength\": 250,\r\n          \"minLength\": 0,\r\n          \"type\": \"string\"\r\n        },\r\n        \"netPrice\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\"\r\n        },\r\n        \"netPriceFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"country\": {\r\n          \"$ref\": \"#/definitions/CountryDto\"\r\n        },\r\n        \"taxAmount\": {\r\n          \"format\": \"double\",\r\n          \"type\": \"number\",\r\n          \"readOnly\": true\r\n        },\r\n        \"taxAmountFormatted\": {\r\n          \"type\": \"string\",\r\n          \"readOnly\": true\r\n        },\r\n        \"id\": {\r\n          \"format\": \"int32\",\r\n          \"type\": \"integer\"\r\n        },\r\n        \"name\": {\r\n          \"maxLength\": 100,\r\n          \"minLength\": 0,\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"PagerDto\": {\r\n      \"description\": \"an object for containing paging related data\",\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"total\": {\r\n          \"format\": \"int64\",\r\n          \"type\": \"integer\"\r\n        },\r\n        \"pageNumber\": {\r\n          \"format\": \"int32\",\r\n          \"type\": \"integer\",\r\n          \"readOnly\": true\r\n        },\r\n        \"pageCount\": {\r\n          \"format\": \"int32\",\r\n          \"type\": \"integer\",\r\n          \"readOnly\": true\r\n        },\r\n        \"pageIndex\": {\r\n          \"format\": \"int32\",\r\n          \"type\": \"integer\"\r\n        },\r\n        \"pageSize\": {\r\n          \"format\": \"int32\",\r\n          \"type\": \"integer\"\r\n        },\r\n        \"isLastPage\": {\r\n          \"type\": \"boolean\",\r\n          \"readOnly\": true\r\n        },\r\n        \"isFirstPage\": {\r\n          \"type\": \"boolean\",\r\n          \"readOnly\": true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
      "url": "http://localhost:58316/swagger/v1.0/swagger.json",
      "output": null
    }
  },
  "codeGenerators": {
    "swaggerToTypeScriptClient": {
      "className": "{controller}ApiClient",
      "moduleName": "",
      "namespace": "",
      "typeScriptVersion": 1.8,
      "template": "Fetch",
      "promiseType": "Promise",
      "httpClass": "Http",
      "useSingletonProvider": false,
      "injectionTokenType": "OpaqueToken",
      "rxJsVersion": 5.0,
      "dateTimeType": "Date",
      "nullValue": "Undefined",
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "generateOptionalParameters": false,
      "wrapDtoExceptions": false,
      "wrapResponses": false,
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "useTransformOptionsMethod": false,
      "useTransformResultMethod": false,
      "generateDtoTypes": true,
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "markOptionalProperties": true,
      "generateCloneMethod": false,
      "typeStyle": "Class",
      "generateDefaultValues": true,
      "excludedTypeNames": [],
      "handleReferences": false,
      "generateConstructorInterface": true,
      "convertConstructorInterfaceData": false,
      "importRequiredTypes": true,
      "useGetBaseUrlMethod": false,
      "baseUrlTokenName": "API_BASE_URL",
      "queryNullValue": "",
      "output": "TzpeScript.Generated.ts"
    },
    "swaggerToCSharpClient": {
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "generateDtoTypes": true,
      "injectHttpClient": false,
      "disposeHttpClient": true,
      "generateExceptionClasses": true,
      "exceptionClass": "SwaggerException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "parameterDateTimeFormat": "s",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}ApiClient",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "generateOptionalParameters": false,
      "generateJsonMethods": true,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.ObjectModel.ObservableCollection",
      "responseDictionaryType": "System.Collections.Generic.Dictionary",
      "wrapResponses": false,
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Checkout.Web.Client",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTime",
      "dateTimeType": "System.DateTime",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.ObjectModel.ObservableCollection",
      "dictionaryType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.ObservableCollection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "output": null
    }
  }
}